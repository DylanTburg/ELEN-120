


ARM Macro Assembler    Page 1 


    1 00000000         ;******************** (C) Andrew Wolfe *****************
                       **************************
    2 00000000         ; @file    HW7 Problem 2
    3 00000000         ; @author  Andrew Wolfe
    4 00000000         ; @date    2023
    5 00000000         ;*******************************************************
                       ************************
    6 00000000         
    7 00000000         
    8 00000000                 AREA             main, CODE, READONLY
    9 00000000                 EXPORT           __main
   10 00000000                 ENTRY
   11 00000000         
   12 00000000         __main  PROC
   13 00000000 F04F 0405       ldr              r4, =5      ;demonstrate values
                                                             are conserved
   14 00000004 F04F 0505       ldr              r5, =5
   15 00000008 F04F 0605       ldr              r6, =5
   16 0000000C F04F 0705       ldr              r7, =5
   17 00000010 F04F 0805       ldr              r8, =5
   18 00000014 F04F 0905       ldr              r9, =5
   19 00000018 F04F 0A05       ldr              r10, =5
   20 0000001C F04F 0B05       ldr              r11, =5
   21 00000020 4843            ldr              r0, =strarray ; Pointer to arra
                                                            y of string pointer
                                                            s
   22 00000022 4944            ldr              r1, =endofarray
   23 00000024 E92D 0FF0       push{r11,r10,r9,r8,r7,r6,r5,r4}
   24 00000028 F7FF FFFE       bl               mysort      ; Call sorting rout
                                                            ine
   25 0000002C E8BD 0FF0       pop{r4,r5,r6,r7,r8,r9,r10,r11}
   26 00000030 E7FE    endless b                endless
   27 00000032         
   28 00000032                 ENDP
   29 00000032         
   30 00000032         
   31 00000032         
   32 00000032         
   33 00000032         
   34 00000032         mysort  PROC
   35 00000032 F04F 0400       ldr              r4, =0
   36 00000036 B500            push{lr}
   37 00000038 F7FF FFFE 
                       loop0   bl               compare_and_swap
   38 0000003C 483C            ldr              r0, =strarray
   39 0000003E F104 0404       add              r4, #4      ;increments r0 up t
                                                            o the next value af
                                                            ter a full loop
   40 00000042 4420            add              r0, r4
   41 00000044 4281            cmp              r1, r0
   42 00000046 D1F7            bne              loop0
   43 00000048 F85D EB04       pop{lr}
   44 0000004C 4770    end     bx               lr
   45 0000004E                 ENDP
   46 0000004E         
   47 0000004E         compare_and_swap
                               PROC
   48 0000004E F04F 0801       mov              r8, #1      ;counter
   49 00000052 F04F 0900       mov              r9, #0      ;r9 and r6 are used



ARM Macro Assembler    Page 2 


                                                             for constants in t
                                                            he switching proces
                                                            s
   50 00000056 F04F 0700       mov              r7, #0
   51 0000005A F04F 0A00       mov              r10, #0
   52 0000005E F06F 05FF       ldr              r5, =0xffffff00
   53 00000062 F100 0004       add              r0, #4
   54 00000066 4288            cmp              r0, r1
   55 00000068 D012            beq              back        ; check in case we'
                                                            ve reached the end
   56 0000006A F1A0 0004       sub              r0, #4
   57 0000006E F06F 0603       mov              r6, #-4     ;used for offset
   58 00000072 E020    loop1   b                compare
   59 00000074 F100 0004 
                       continue
                               add              r0, #4
   60 00000078 F108 0801       add              r8, #1
   61 0000007C FB08 F906       mul              r9, r8, r6
   62 00000080 F109 0904       add              r9, #4
   63 00000084 F06F 05FF       ldr              r5, =0xffffff00
   64 00000088 F04F 0A00       mov              r10, #0
   65 0000008C F04F 0700       mov              r7, #0
   66 00000090 4281    back    cmp              r1, r0
   67 00000092 D1EE            bne              loop1
   68 00000094 4770            bx               lr
   69 00000096 FB08 F906 
                       swap    mul              r9, r8, r6
   70 0000009A F109 0904       add              r9, #4
   71 0000009E F850 2009       ldr              r2, [r0, r9]
   72 000000A2 6803            ldr              r3, [r0]
   73 000000A4 4617            mov              r7, r2      ;swap with offset o
                                                            f r8 times r6(-4)
   74 000000A6 461A            mov              r2, r3
   75 000000A8 463B            mov              r3, r7
   76 000000AA F04F 0700       mov              r7, #0
   77 000000AE F840 2009       str              r2, [r0, r9]
   78 000000B2 6003            str              r3, [r0]
   79 000000B4 E7EC            b                back
   80 000000B6 F1B8 0F01 
                       compare cmp              r8, #1
   81 000000BA D0DB            beq              continue
   82 000000BC F850 2009       ldr              r2, [r0, r9]
   83 000000C0 6803            ldr              r3, [r0]
   84 000000C2 4452            add              r2, r10
   85 000000C4 4453            add              r3, r10
   86 000000C6 6812            ldr              r2, [r2]
   87 000000C8 681B            ldr              r3, [r3]
   88 000000CA EA22 0205       bic              r2, r5
   89 000000CE EA23 0305       bic              r3, r5
   90 000000D2 E010            b                ridcapitals
   91 000000D4 4293    return2 cmp              r3, r2
   92 000000D6 DBDE            blt              swap
   93 000000D8 D1CC            bne              continue
   94 000000DA 2B00            cmp              r3, #0      ;case for when we a
                                                            re at the end and r
                                                            3=r2 (they are the 
                                                            same string)
   95 000000DC D0CA            beq              continue
   96 000000DE EA4F 6535       ror              r5, #24



ARM Macro Assembler    Page 3 


   97 000000E2 F107 0701       add              r7, #1
   98 000000E6 2F04            cmp              r7, #4
   99 000000E8 D000            beq              nextword
  100 000000EA E7E4            b                compare
  101 000000EC F10A 0A04 
                       nextword
                               add              r10, #4     ;if first four lett
                                                            ers are the same, m
                                                            ove to next 32-bit 
                                                            string (thats what 
                                                            I mean by word). It
                                                            's not the actual n
                                                            ext word in the str
                                                            array
  102 000000F0 F04F 0700       mov              r7, #0
  103 000000F4 E7DF            b                compare
  104 000000F6 F84D AD04 
                       ridcapitals
                               push             {r10}
  105 000000FA F04F 3A5B       mov              r10, #0x5b5b5b5b ;check if r2 i
                                                            s capital
  106 000000FE EA2A 0A05       bic              r10, r5
  107 00000102 4552            cmp              r2, r10
  108 00000104 DB08            blt              action1
  109 00000106 F04F 3A5B 
                       return0 mov              r10, #0x5b5b5b5b ;check if r3 i
                                                            s capital
  110 0000010A EA2A 0A05       bic              r10, r5
  111 0000010E 4553            cmp              r3, r10
  112 00000110 DB08            blt              action2
  113 00000112 F85D AB04 
                       return1 pop              {r10}
  114 00000116 E7DD            b                return2
  115 00000118 F04F 3A20 
                       action1 mov              r10, #0x20202020 ;if r2 is capi
                                                            tal convert to lowe
                                                            r case
  116 0000011C EA2A 0A05       bic              r10, r5
  117 00000120 4452            add              r2, r10
  118 00000122 E7F0            b                return0
  119 00000124 F04F 3A20 
                       action2 mov              r10, #0x20202020 ;if r3 is capi
                                                            tal convert to lowe
                                                            r case
  120 00000128 EA2A 0A05       bic              r10, r5
  121 0000012C 4453            add              r3, r10
  122 0000012E E7F0            b                return1
  123 00000130                 ENDP
  124 00000130         
  125 00000130                 ALIGN
  126 00000130 00000000 
              00000000 
              00000000         AREA             mydata, DATA, READONLY
  127 00000000         
  128 00000000                 AREA             mydata, DATA, READONLY
  129 00000000 46 69 72 
              73 74 20 
              73 74 72 
              69 6E 67 



ARM Macro Assembler    Page 4 


              00       str1    DCB              "First string",0
  130 0000000D 53 65 63 
              6F 6E 64 
              20 73 74 
              72 69 6E 
              67 00    str2    DCB              "Second string",0
  131 0000001B 53 6F 2C 
              20 64 6F 
              20 49 20 
              72 65 61 
              6C 6C 79 
              20 6E 65 
              65 64 20 
              61 20 74 
              68 69 72 
              64 20 73 
              74 72 69 
              6E 67 00 str3    DCB              "So, do I really need a third s
tring",0
  132 0000003F 54 65 74 
              72 61 70 
              68 6F 62 
              69 61 20 
              69 73 20 
              74 68 65 
              20 66 65 
              61 72 20 
              6F 66 20 
              74 68 65 
              20 6E 75 
              6D 62 65 
              72 20 34 
              00       str4    DCB              "Tetraphobia is the fear of the
 number 4",0
  133 00000067 41 20 69 
              73 20 66 
              6F 72 20 
              61 70 70 
              6C 65 00 str5    DCB              "A is for apple",0
  134 00000076 5A 20 69 
              73 20 63 
              61 6C 6C 
              65 64 20 
              27 7A 65 
              64 27 20 
              69 6E 20 
              43 61 6E 
              61 64 61 
              00       str6    DCB              "Z is called \'zed\' in Canada"
,0
  135 00000092 4D 20 69 
              73 20 66 
              6F 72 20 
              6D 69 64 
              64 6C 65 
              00       str7    DCB              "M is for middle",0
  136 000000A2 00 00 00000000 
              00000000 
              00000000 



ARM Macro Assembler    Page 5 


              00000000 
              00000000 
              00000000 
              00000000 strarray
                               DCD              str1, str2, str3, str4, str5, s
tr6, str7
  137 000000C0         endofarray
  138 000000C0                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\objects\main.d -o.\objects\main.o -IC:\Apps\Keil_v5\ARM\RV31\INC
 -IC:\Apps\Keil_v5\ARM\CMSIS\Include --predefine="__UVISION_VERSION SETA 536" -
-list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

__main 00000000

Symbol: __main
   Definitions
      At line 12 in file main.s
   Uses
      At line 9 in file main.s
Comment: __main used once
action1 00000118

Symbol: action1
   Definitions
      At line 115 in file main.s
   Uses
      At line 108 in file main.s
Comment: action1 used once
action2 00000124

Symbol: action2
   Definitions
      At line 119 in file main.s
   Uses
      At line 112 in file main.s
Comment: action2 used once
back 00000090

Symbol: back
   Definitions
      At line 66 in file main.s
   Uses
      At line 55 in file main.s
      At line 79 in file main.s

compare 000000B6

Symbol: compare
   Definitions
      At line 80 in file main.s
   Uses
      At line 58 in file main.s
      At line 100 in file main.s
      At line 103 in file main.s

compare_and_swap 0000004E

Symbol: compare_and_swap
   Definitions
      At line 47 in file main.s
   Uses
      At line 37 in file main.s
Comment: compare_and_swap used once
continue 00000074

Symbol: continue
   Definitions
      At line 59 in file main.s
   Uses
      At line 81 in file main.s
      At line 93 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 95 in file main.s

end 0000004C

Symbol: end
   Definitions
      At line 44 in file main.s
   Uses
      None
Comment: end unused
endless 00000030

Symbol: endless
   Definitions
      At line 26 in file main.s
   Uses
      At line 26 in file main.s
Comment: endless used once
loop0 00000038

Symbol: loop0
   Definitions
      At line 37 in file main.s
   Uses
      At line 42 in file main.s
Comment: loop0 used once
loop1 00000072

Symbol: loop1
   Definitions
      At line 58 in file main.s
   Uses
      At line 67 in file main.s
Comment: loop1 used once
main 00000000

Symbol: main
   Definitions
      At line 8 in file main.s
   Uses
      None
Comment: main unused
mysort 00000032

Symbol: mysort
   Definitions
      At line 34 in file main.s
   Uses
      At line 24 in file main.s
Comment: mysort used once
nextword 000000EC

Symbol: nextword
   Definitions
      At line 101 in file main.s
   Uses
      At line 99 in file main.s
Comment: nextword used once
return0 00000106



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: return0
   Definitions
      At line 109 in file main.s
   Uses
      At line 118 in file main.s
Comment: return0 used once
return1 00000112

Symbol: return1
   Definitions
      At line 113 in file main.s
   Uses
      At line 122 in file main.s
Comment: return1 used once
return2 000000D4

Symbol: return2
   Definitions
      At line 91 in file main.s
   Uses
      At line 114 in file main.s
Comment: return2 used once
ridcapitals 000000F6

Symbol: ridcapitals
   Definitions
      At line 104 in file main.s
   Uses
      At line 90 in file main.s
Comment: ridcapitals used once
swap 00000096

Symbol: swap
   Definitions
      At line 69 in file main.s
   Uses
      At line 92 in file main.s
Comment: swap used once
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

endofarray 000000C0

Symbol: endofarray
   Definitions
      At line 137 in file main.s
   Uses
      At line 22 in file main.s
Comment: endofarray used once
mydata 00000000

Symbol: mydata
   Definitions
      At line 126 in file main.s
   Uses
      None
Comment: mydata unused
str1 00000000

Symbol: str1
   Definitions
      At line 129 in file main.s
   Uses
      At line 136 in file main.s
Comment: str1 used once
str2 0000000D

Symbol: str2
   Definitions
      At line 130 in file main.s
   Uses
      At line 136 in file main.s
Comment: str2 used once
str3 0000001B

Symbol: str3
   Definitions
      At line 131 in file main.s
   Uses
      At line 136 in file main.s
Comment: str3 used once
str4 0000003F

Symbol: str4
   Definitions
      At line 132 in file main.s
   Uses
      At line 136 in file main.s
Comment: str4 used once
str5 00000067

Symbol: str5
   Definitions
      At line 133 in file main.s
   Uses
      At line 136 in file main.s
Comment: str5 used once
str6 00000076

Symbol: str6



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 134 in file main.s
   Uses
      At line 136 in file main.s
Comment: str6 used once
str7 00000092

Symbol: str7
   Definitions
      At line 135 in file main.s
   Uses
      At line 136 in file main.s
Comment: str7 used once
strarray 000000A4

Symbol: strarray
   Definitions
      At line 136 in file main.s
   Uses
      At line 21 in file main.s
      At line 38 in file main.s

10 symbols
362 symbols in table
